@page
@model IntroduccionRazor.Pages.MensajeSecretoModel
@{
}

<h1>Convierte tu mensaje en secreto</h1>

<form method="post">
    <label asp-for="mensajeOriginal">Mensaje:</label><br>
    <textarea asp-for="mensajeOriginal" id="mensaje" name="mensajeOriginal" rows="4" cols="50"></textarea><br>
    <label asp-for="n">Valor de n:</label>
    <input type="number" asp-for="n" id="n" name="n" min="1"><br><br>
    <input type="submit" value="Codificar">
</form>

<!-- Mostrar el mensaje original -->
@if (!string.IsNullOrEmpty(Model.mensajeOriginal))
{
    <h1>Mensaje Original:</h1>
    <h3>@Model.mensajeOriginal</h3>
}

@{
    string mensajeMayusculas = Model.mensajeOriginal.ToUpper();
    string mensajeCodificado = "";

    int n = Model.n;

    for (int i = 0; i < mensajeMayusculas.Length; i++)
    {
        char letraOriginal = mensajeMayusculas[i];

        if (char.IsLetter(letraOriginal))
        {
            int posicionAbecedario = letraOriginal - 'A';

            int nuevaPosicion = (posicionAbecedario + n) % 26;

            char letraCodificada = (char)('A' + nuevaPosicion);

            if (letraCodificada == 'W')
            {
                letraCodificada = 'X';
            }

            mensajeCodificado += letraCodificada;
        }
        else
        {
            mensajeCodificado += letraOriginal;
        }
    }
}

<h1>Mensaje Codificado:</h1>
<h3>@mensajeCodificado</h3>

<br />
<br />

<h1>Decodifica tu mensaje secreto</h1>

<form method="post" asp-page-handler="Decodificar">
    <input type="hidden" asp-for="mensajeOriginal" />
    <label asp-for="mensajeCodificado">Mensaje Codificado:</label><br>
    <textarea asp-for="mensajeCodificado" id="mensajeCodificado" name="mensajeCodificado" rows="4" cols="50"></textarea><br>
    <label asp-for="n">Valor de n:</label>
    <input type="number" asp-for="n" id="n" name="n" min="1"><br><br>
    <input type="submit" value="Decodificar">
</form>

<h1>Mensaje Decodificado:</h1>
@if (!string.IsNullOrEmpty(Model.mensajeDecodificado))
{
    <h3>@Model.mensajeDecodificado</h3>
}

@functions {
    private string DecodeMessage(string mensajeCodificado, int n)
    {
        string mensajeMayusculas = mensajeCodificado.ToUpper();
        string mensajeDecodificado = "";

        for (int i = 0; i < mensajeMayusculas.Length; i++)
        {
            char letraOriginal = mensajeMayusculas[i];

            if (char.IsLetter(letraOriginal))
            {
                int posicionAbecedario = letraOriginal - 'A';
                int nuevaPosicion = (posicionAbecedario - n + 26) % 26;
                char letraDecodificada = (char)('A' + nuevaPosicion);
                mensajeDecodificado += letraDecodificada;
            }
            else
            {
                mensajeDecodificado += letraOriginal;
            }
        }

        return mensajeDecodificado;
    }
}
